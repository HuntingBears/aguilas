Contributing to Aguilas
=======================

We're passionate about helping Aguilas users make the jump to contributing members of the community, so there are many ways you can help aguilas development:

+ Report bugs and request features in our `ticket tracker <https://github.com/HuntingBears/aguilas/issues>`_. Please read `Reporting bugs`_, below, for the details on how you sould do this.
+ Submit patches or pull requests for new and/or fixed behavior. Please read `Submitting patches`_, below, for details on how to submit a patch. If you're looking for an easy way to start contributing to Aguilas have a look at the easy-pickings tickets.
+ Join the `Aguilas mailing list <http://groups.google.com/group/aguilas-list>`_ and share your ideas for how to improve Aguilas. We're always open to suggestions.
+ Improve Aguilas documentation by reading, writing new articles or correcting existing ones. You can find more information on how we do this at `Writing documentation`_.
+ Translate Aguilas into your local language, by joining our translation team. Read more on `Translating Aguilas`_.

That's all you need to know if you'd like to join the Aguilas development community. The rest of this document describes the details of how our community works and how it handles bugs, mailing lists, and all the other details of Aguilas development.

Reporting bugs
--------------

Well-written bug reports are incredibly helpful. However, there's a certain amount of overhead involved in working with any bug tracking system so your help in keeping our ticket tracker as useful as possible is appreciated. In particular:

+ Check that someone hasn't already filed the bug or feature request by searching in the `ticket tracker <https://github.com/HuntingBears/aguilas/issues>`_.
+ If you are not sure if what you are seeing is a bug, ask first on the `mailing list <http://groups.google.com/group/aguilas-list>`_ or the `#aguilas IRC channel <irc://irc.freenode.net/aguilas>`_.
+ Don't use the ticket system to ask support questions. Use the `aguilas mailing list <http://groups.google.com/group/aguilas-list>`_ or the `#aguilas IRC channel <irc://irc.freenode.net/aguilas>`_ for that.
+ Read the `FAQ <faq.rest>`_ to see if your issue might be a well-known question.
+ Write complete, reproducible, specific bug reports. You must include a clear, concise description of the problem, and a set of instructions for replicating it. Add as much debug information as you can: code snippets, test cases, error messages, screenshots, etc. A nice small test case is the best way to report a bug, as it gives us an easy way to confirm the bug quickly.

How to report a bug
+++++++++++++++++++

First of all, `create an account on GitHub <https://github.com/signup/free>`_, is very quick and easy.

Next, gather all the information you have about the bug you are going to report (*everything* could be useful). Go to the `new issue form <https://github.com/HuntingBears/aguilas/issues/new>`_ in our `ticket tracker <https://github.com/HuntingBears/aguilas/issues>`_ and fill in a descriptive title for the ticket and the content of the bug you are reporting.

If you need to attach a piece of code, error or patch, please use `the gist <https://gist.github.com/>`_. The gist is a special service from github to add pieces of code in a tiny repository publicly available. Add the code you need in a `public gist <https://gist.github.com/gists/new>`_, and then paste the resultant link in the bug report.

Submitting patches
------------------

A patch is a structured file that consists of a list of differences between one set of files and another. All additions and deletions of **contributed code** to Aguilas are done through patches.

A patch can be sent to Aguilas developers through the `ticket tracker <https://github.com/HuntingBears/aguilas/issues>`_ and `the gist <https://gist.github.com/>`_. Add the patch code in a `public gist <https://gist.github.com/gists/new>`_ and then `open a new ticket <https://github.com/HuntingBears/aguilas/issues/new>`_ describing the patch you made. Remember to add the link to the public gist so it can be referenced and checked out by developers. Also, you will need to `open an account <https://github.com/signup/free>`_ on github to do all of this.

If you want to know more about creating, applying and submitting patches, read our `patches guide <patches.rest>`_.

If you want to install the development version of Aguilas to start reviewing, understanding and improving the code, read the "*Installing the development version*" section on the `installation guide <installing.rest>`_.

You might also want to start `understanding Aguilas's source code <sourcecode.rest>`_.

Submitting pull requests
------------------------

A pull request is a special service from code repositories that enable developers to manage contribution activities more easily. It allows a developer to clone or fork a repository of code, make changes to it and then request the addition of this modified code to the upstream developers of Aguilas.

If you want to contribute to Aguilas using this method, you will have to fork Aguilas on github, download the forked code to your computer, make the changes you need to make in order to correct the bug or implement a new feature, push your changes and finally request your code to be pulled to Aguilas main repository. You will need to `open an account <https://github.com/signup/free>`_ on github to do all of this.

If you want detailed information how to make a pull request, please read the `pull request guide <pullrequest.rest>`_.

You might also want to start `understanding Aguilas's source code <sourcecode.rest>`_.

There's also more information about `working with git <git.rest>`_ available.

Writing documentation
---------------------

We place a high importance on consistency, readability, simplicity and portability of documentation. After all, great documentation is what makes great projects great.

Documentation changes generally come in two forms:

+ **General improvements:** typo corrections, error fixes and better explanations through clearer writing and more examples.
+ **New features:** documentation of features that have been added to the core since the last release.

Aguilas's documentation uses the `Sphinx documentation system <http://sphinx.pocoo.org>`_, which in turn is based on reStructuredText (reST or RST). The basic idea is that lightly-formatted plain-text documentation is transformed into HTML, WIKI, and MAN pages with minor efforts. We always modify the documentation in the development stage/branch.

If you want to obtain a copy of the development version of Aguilas to start reviewing, understanding and improving documentation, read the `installation guide <installing.rest>`_ on the "*Installing the development version*" section.

To actually build the documentation locally, you'll currently need to install sphinx and other applications. Read the document on `build dependencies <dependencies.rest>`_ for the complete list of dependencies and how to install them.

Once downloaded, you will find the documentation sources (rest format) on ``documentation/rest``. You will also notice other folders (described below). These are autogenerated documentation formats, **DO NOT** edit them directly, edit the sources instead.

``documentation/html``:  Contains the generated HTML using sphinx. These HTML pages are updated using the rest sources located at ``documentation/rest`` through the command ``make gen-html``.
``documentation/man``:  Contains the rest source to produce a manual page (man) through the ``rst2man`` application. ``make gen-man`` on the top level directory will produce the file ``documentation/man/aguilas.1``.
``documentation/githubwiki``:  This directory contains a git submodule for the GitHub Wiki. The generated wiki format is copied here and uploaded to GitHub to keep all documentation in sync. ``make gen-wiki`` will update the files on this folder using the rest sources on ``documentation/rest``.
``documentation/googlewiki``:  This directory also contains a git submodule but for the Google Code Wiki. The generated wiki format is copied here and uploaded to Google Code to keep all documentation in sync. ``make gen-wiki`` will update the files on this folder using the rest sources on ``documentation/rest``.

If you want to modify or add new documents, feel free to inspect the ``documentation/rest`` folder. If you add a new rest file in the sources folder, don't worry about it not being referenced on the index or the table of contents, this is done automatically at build time.

To get started contributing, you'll want to read the `reStructuredText basics <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_. After that, you'll want to read `understanding the Aguilas source code <sourcecode.rest>`_ to know how and where you are going to make the changes.

If you want your contributions to be added on official documentation, please read `Submitting patches`_ and `Submitting pull requests`_.

Translating Aguilas
-------------------

Translations are contributed by Aguilas users everywhere. The translation work is coordinated at Transifex and the mailing lists.

If you find an incorrect translation or want to discuss specific translations, go to the translation team page for that language. If you would like to help out with translating or add a language that isn’t yet translated, here’s what to do:

#. Join the Aguilas mailing list and introduce yourself, explaining what you want to do.

#. Signup at Transifex and visit the Aguilas project page.

#. On the translation teams page, choose the language team you want to work with, or – in case the language team doesn’t exist yet – request a new team by clicking on the “Request a new team” button and select the appropriate language.

    Then, click the “Join this Team” button to become a member of this team. Every team has at least one coordinator who is responsible to review your membership request. You can of course also contact the team coordinator to clarify procedural problems and handle the actual translation process.

    Once you are a member of a team choose the translation resource you want to update on the team page. For example the “core” resource refers to the translation catalogue that contains all non-contrib translations. Each of the contrib apps also have a resource (prefixed with “contrib”).
