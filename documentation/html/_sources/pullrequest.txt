Contributing code through pull requests
=======================================

The `Aguilas development model <development.rest>`_ follows the standard *GitHub model* for contributions: `fork a project <https://github.com/HuntingBears/aguilas/>`_, clone it to your local computer, hack on it there, push your finished changes to your forked repository, and send a *Pull Request* back upstream to the project. If you're already familiar with this process, then congratulations! You're done here, `get hacking <https://github.com/HuntingBears/aguilas/>`_!

The GitHub guide for the standard `fork <http://help.github.com/fork-a-repo>`_/clone/push/`pull request <http://help.github.com/send-pull-requests/>`_ model of contributing is a great place to start, but we'll cover all the basics here, too, as well as various contribution scenarios (fixing bugs, adding features, updating documentation, etc.).

Getting Started
---------------

First, you'll need a GitHub account. If you don't have one, go and `sign up now <https://github.com/signup/free>`_. After that, you'll need to `provide your SSH key <http://help.github.com/linux-set-up-git/>`_ to authorize your computer to make pushes.

You need to download and install Git and then configure it. You might want to take a look at our `Working with git guide <git.rest>`_.

Now you're ready to grab the Aguilas repository. Hit the `Aguilas repository page <https://github.com/HuntingBears/aguilas/>`_ and click the *Fork* button. This will create a complete copy of the Aguilas repository within your GitHub account.

Now you've got your own fork. This is your own personal copy of the Aguilas source tree, and you can do anything you want with it. Next, let's clone your fork of Aguilas. Just switch to a directory where you want to keep your repository and do this, replacing ``[USERNAME]`` with your actual GitHub username::

	git clone --branch development git@github.com:[USERNAME]/aguilas.git

Congratulations! You now have your very own Aguilas repository. Now you'll want to make sure that you can always pull down changes from the upstream canonical repository. To do so, do this::

	cd aguilas
	git remote add upstream git://github.com/HuntingBears/aguilas.git 
	git pull upstream development

Anytime you want to merge in the latest changes from the upstream repository, just issue the command ``git pull upstream development`` to pull the latest from the development branch of the upstream repository and you'll be good to go. You should also push it up to your fork::

	git push origin development

Submitting the pull request
---------------------------

After you have pushed the changes to your fork, go to your fork page on github and hit the *pull request* button. After that, you are presented with a preview page where you can enter a title and optional description, see exactly what commits will be included when the pull request is sent, and also see who the pull request will be sent to (Aguilas upstream repository).

More information on `pull requests <http://help.github.com/send-pull-requests/>`_.
